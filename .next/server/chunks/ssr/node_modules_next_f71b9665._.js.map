{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/pages/_app.tsx","turbopack:///[project]/node_modules/next/app.js"],"sourcesContent":["import React from 'react'\n\nimport type {\n  AppContextType,\n  AppInitialProps,\n  AppPropsType,\n  NextWebVitalsMetric,\n  AppType,\n} from '../shared/lib/utils'\nimport type { Router } from '../client/router'\n\nimport { loadGetInitialProps } from '../shared/lib/utils'\n\nexport type { AppInitialProps, AppType }\n\nexport type { NextWebVitalsMetric }\n\nexport type AppContext = AppContextType<Router>\n\nexport type AppProps<P = any> = AppPropsType<Router, P>\n\n/**\n * `App` component is used for initialize of pages. It allows for overwriting and full control of the `page` initialization.\n * This allows for keeping state between navigation, custom error handling, injecting additional data.\n */\nasync function appGetInitialProps({\n  Component,\n  ctx,\n}: AppContext): Promise<AppInitialProps> {\n  const pageProps = await loadGetInitialProps(Component, ctx)\n  return { pageProps }\n}\n\nexport default class App<P = any, CP = {}, S = {}> extends React.Component<\n  P & AppProps<CP>,\n  S\n> {\n  static origGetInitialProps = appGetInitialProps\n  static getInitialProps = appGetInitialProps\n\n  render() {\n    const { Component, pageProps } = this.props as AppProps<CP>\n\n    return <Component {...pageProps} />\n  }\n}\n","module.exports = require('./dist/pages/_app')\n"],"names":["App","appGetInitialProps","Component","ctx","pageProps","loadGetInitialProps","React","origGetInitialProps","getInitialProps","render","props"],"mappings":"sHAiCA,UAAA,qCAAqBA,yCAjCH,CAAA,CAAA,IAAA,QAWkB,CAAA,CAAA,IAAA,GAcpC,eAAeC,EAAmB,CAChCC,WAAS,KACTC,CAAG,CACQ,EAEX,MAAO,CAAEC,UADS,MAAMC,CAAAA,EAAAA,EAAAA,mBAAAA,AAAmB,EAACH,EAAWC,EACpC,CACrB,CAEe,MAAMH,UAAsCM,EAAAA,OAAK,CAACJ,SAAS,aAIjEK,mBAAAA,CAAsBN,cACtBO,eAAAA,CAAkBP,EAEzBQ,QAAS,CACP,GAAM,CAAEP,WAAS,WAAEE,CAAS,CAAE,CAAG,IAAI,CAACM,KAAK,CAE3C,MAAO,CAAP,AAAO,EAAA,EAAA,GAAA,EAACR,EAAR,AAAQA,CAAW,GAAGE,CAAS,EACjC,CACF,wOC7CA,EAAO,OAAO,CAAA,EAAA,CAAA,CAAA","ignoreList":[0,1]}