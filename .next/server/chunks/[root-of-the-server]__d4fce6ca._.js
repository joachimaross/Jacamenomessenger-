module.exports=[70406,(e,t,i)=>{t.exports=e.x("next/dist/compiled/@opentelemetry/api",()=>require("next/dist/compiled/@opentelemetry/api"))},55915,(e,t,i)=>{t.exports=e.x("web-push",()=>require("web-push"))},60052,e=>{"use strict";var t=e.i(26747),i=e.i(90406),a=e.i(44898),r=e.i(62950),n=e.i(55915);let s=[];function o(e,t){if("POST"===e.method){let{title:i,body:a}=e.body,r=JSON.stringify({title:i,body:a});Promise.all(s.map(e=>n.default.sendNotification(e,r))).then(()=>t.status(200).json({message:"Notification sent successfully."})).catch(e=>{console.error("Error sending notification, reason: ",e),t.status(500).json({message:"Failed to send notification."})})}else t.setHeader("Allow",["POST"]),t.status(405).end(`Method ${e.method} Not Allowed`)}n.default.setVapidDetails("mailto:your-email@example.com","BHjGGBScInXF7-NW49tC8BOxFRs6VzUPXRmrCssqj9bisffHyJrLbLeeNtvMqU7MfKXnjAvwkOgck3ir2IYNgUY",process.env.VAPID_PRIVATE_KEY),e.s(["default",()=>o],39125);var l=e.i(39125),d=e.i(7031),u=e.i(81927),p=e.i(46432);let c=(0,r.hoist)(l,"default"),f=(0,r.hoist)(l,"config"),m=new a.PagesAPIRouteModule({definition:{kind:i.RouteKind.PAGES_API,page:"/api/notify",pathname:"/api/notify",bundlePath:"",filename:""},userland:l,distDir:".next",relativeProjectDir:""});async function h(e,i,a){m.isDev&&(0,p.addRequestMeta)(e,"devRequestTimingInternalsEnd",process.hrtime.bigint());let r="/api/notify";r=r.replace(/\/index$/,"")||"/";let n=await m.prepare(e,i,{srcPage:r});if(!n){i.statusCode=400,i.end("Bad Request"),null==a.waitUntil||a.waitUntil.call(a,Promise.resolve());return}let{query:s,params:o,prerenderManifest:l,routerServerContext:c}=n;try{let t=e.method||"GET",a=(0,d.getTracer)(),n=a.getActiveScopeSpan(),p=m.instrumentationOnRequestError.bind(m),f=async n=>m.render(e,i,{query:{...s,...o},params:o,allowedRevalidateHeaderKeys:[],multiZoneDraftMode:!1,trustHostHeader:!1,previewProps:l.preview,propagateError:!1,dev:m.isDev,page:"/api/notify",internalRevalidate:null==c?void 0:c.revalidate,onError:(...t)=>p(e,...t)}).finally(()=>{if(!n)return;n.setAttributes({"http.status_code":i.statusCode,"next.rsc":!1});let e=a.getRootSpanAttributes();if(!e)return;if(e.get("next.span_type")!==u.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${e.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let s=e.get("next.route");if(s){let e=`${t} ${s}`;n.setAttributes({"next.route":s,"http.route":s,"next.span_name":e}),n.updateName(e)}else n.updateName(`${t} ${r}`)});n?await f(n):await a.withPropagatedContext(e.headers,()=>a.trace(u.BaseServerSpan.handleRequest,{spanName:`${t} ${r}`,kind:d.SpanKind.SERVER,attributes:{"http.method":t,"http.target":e.url}},f))}catch(e){if(m.isDev)throw e;(0,t.sendError)(i,500,"Internal Server Error")}finally{null==a.waitUntil||a.waitUntil.call(a,Promise.resolve())}}e.s(["config",0,f,"default",0,c,"handler",()=>h],60052)}];

//# sourceMappingURL=%5Broot-of-the-server%5D__d4fce6ca._.js.map